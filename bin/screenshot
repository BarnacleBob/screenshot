#!/usr/bin/env python
import logging
import sys
from optparse import OptionParser
try:
    from pyimgur import Imgur
except ImportError:
    Imgur = None

from screenshot import Screenshot
from screenshot import config

def main():

   parser = OptionParser()
   parser.add_option("-c", "--config", dest="config", help="config file", metavar="FILE", default=None)
   parser.add_option("-v", "--verbose", dest="verbose", action="store_true", default=False)
   parser.add_option("", "--sync", dest="sync", action="store_true", default=False)
   parser.add_option("", "--rebuild-index", dest="rebuild_index", action="store_true", default=False)
   parser.add_option("", "--update-full-calendar", dest="update_full_calendar", action="store_true", default=False)
   parser.add_option("", "--update-calendar", dest="update_calendar", action="store_true", default=False)
   parser.add_option("-l", "--log-level", dest="log_level", default='info', help="set logging level [%default]")
   parser = parser

   (options, args) = parser.parse_args()

   log = logging.getLogger()
   stderr_handler = logging.StreamHandler()
   formatter = logging.Formatter("[%(process)d] %(name)s %(levelname)s %(message)s")
   stderr_handler.setFormatter(formatter)
   log.addHandler(stderr_handler)
   log.setLevel(getattr(logging, options.log_level.upper()))
   log = logging.getLogger('Screenshot')


   opts = config.GetScreenshotOptions(options.config)

   app = Screenshot(opts)

   app.configure_disk()
   app.configure_s3()
   app.configure_couchdb()

   app.use_local_index = False
   app.egress_fqdn = opts.egress_fqdn
   app.page_size = opts.page_size

   if options.sync:
      print "Syncing static..."
      app.sync_static()
      sys.exit(0)

   if options.rebuild_index:
      print "Rebuilding indexes.."
      app.rebuild_index()
      sys.exit(0)

   if options.update_full_calendar:
      print "Updating image calendar.."
      app.update_full_calendar()
      sys.exit(0)

   if options.update_calendar:
      print "Updating image calendar.."
      app.update_calendar()
      sys.exit(0)

   app.take_screenshot()

if __name__ == '__main__':
   main()
